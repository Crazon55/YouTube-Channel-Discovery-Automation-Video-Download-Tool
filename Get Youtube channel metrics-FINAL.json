{
  "name": "Get Youtube channel metrics",
  "nodes": [
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/channels",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet,statistics,contentDetails"
            },
            {
              "name": "id",
              "value": "={{ $json.channelId }}"
            },
            {
              "name": "key",
              "value": "AIzaSyCj1HttdqyqPq1bgAivbEsh4DJWmQT9oZI"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        128,
        -64
      ],
      "id": "3774f379-f274-4b66-bae0-c0247a54a6b2",
      "name": "channel stats1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9cb94c92-d608-453c-b7b2-f33b4c209ba4",
              "name": "Keyword",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -928,
        -64
      ],
      "id": "ff7fb657-0f43-41a8-bdc2-006b62bf14f5",
      "name": "ID1"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet"
            },
            {
              "name": "channelId",
              "value": "={{ $('fetch channelTitle and Links').item.json.channelId }}"
            },
            {
              "name": "order",
              "value": "date"
            },
            {
              "name": "maxResults",
              "value": "5"
            },
            {
              "name": "key",
              "value": "AIzaSyCj1HttdqyqPq1bgAivbEsh4DJWmQT9oZI"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        576,
        -160
      ],
      "id": "29af7d5a-04b1-4e01-bc6c-bdc103b48e41",
      "name": "Get Last 5 Videos"
    },
    {
      "parameters": {
        "jsCode": "// Log for debugging: Check how many videos are actually coming in\nconsole.log('Videos received for channel:', $json.items ? $json.items.length : 0);\nconsole.log('Full video data:', $json.items); // Inspect the structure\n\nconst videos = $json.items || [];\nif (videos.length === 0) {\n  console.log('No videos found, skipping channel');\n  return []; // No videos found, skip this channel\n}\n\nconst now = new Date();\nconst lastUploadTime = new Date(videos[0].snippet.publishTime);\nconst daysSinceUpload = (now - lastUploadTime) / (1000 * 60 * 60 * 24);\n\nif (daysSinceUpload > 30) {\n  console.log('Channel inactive (last upload >30 days), skipping');\n  return []; // Channel is inactive, skip\n}\n\n// Prepare a batch of video IDs for the stats API\nconst videoIds = videos\n  .filter(v => v && v.id && v.id.videoId) // Safety check\n  .map(v => v.id.videoId)\n  .join(',');\n\nreturn [{\n  json: {\n    channelId: videos[0].snippet.channelId,\n    channelTitle: videos[0].snippet.channelTitle,\n    lastUpload: videos[0].snippet.publishTime,\n    videoIds,\n    videoCount: videos.length // For tracking how many were processed\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -160
      ],
      "id": "ae872459-9645-4ff5-bbef-026b1718b582",
      "name": "get videoIDs",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "jsCode": "// Input: Assume $json.videoIds is a comma-separated string, e.g., \"BBo8uYdqAb0,gYD6fS5y4po,f32z5Squ1uI,OJU0Cgl6hA8,dZL_PhKLNMw\"\nconst videoIdsString = $json.videoIds || '';\n\n// Split into individual IDs, trim whitespace, and filter out empties\nconst videoIdList = videoIdsString\n  .split(',')\n  .map(id => id.trim())\n  .filter(id => id.length > 0);\n\n// Transform into n8n items: one per video ID\nconst outputItems = videoIdList.map(videoId => ({\n  json: {\n    videoId: videoId\n  }\n}));\n\n// Return the array of individual items\nreturn outputItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1024,
        -160
      ],
      "id": "3b475bb0-642a-4d92-a538-84b0282fc6d4",
      "name": "GET each videoID"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/videos",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "statistics"
            },
            {
              "name": "id",
              "value": "={{ $json.videoId }}"
            },
            {
              "name": "key",
              "value": "AIzaSyCj1HttdqyqPq1bgAivbEsh4DJWmQT9oZI"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1248,
        -160
      ],
      "id": "d6711817-37bc-4259-9a0c-86c8f1eb677c",
      "name": "Each video metric"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.items[0].statistics.subscriberCount }}",
                    "rightValue": 1000,
                    "operator": {
                      "type": "number",
                      "operation": "gt"
                    },
                    "id": "c7c6bf00-8f72-4258-ae7b-bd40bf67f510"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        352,
        -160
      ],
      "id": "6f2d5e7f-66b7-4f11-8c75-f1e3e8f01f13",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Total_Views": "={{ $json.items[0].statistics.viewCount }}",
            "Subscriber_Count": "={{ $json.items[0].statistics.subscriberCount }}",
            "No. of videos": "={{ $json.items[0].statistics.videoCount }}",
            "Channel_Name": "={{ $('fetch channelTitle and Links').item.json.channelTitle }}",
            "Link of the channel": "={{ $('fetch channelTitle and Links').item.json.channelLink }}",
            "Avg views on the last 5 videos": "=",
            "Engagement rate(likes+comments/views)": "=",
            "Last upload date": "="
          },
          "matchingColumns": [
            "Channel_Name"
          ],
          "schema": [
            {
              "id": "Channel_Name",
              "displayName": "Channel_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Link of the channel",
              "displayName": "Link of the channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subscriber_Count",
              "displayName": "Subscriber_Count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "No. of videos",
              "displayName": "No. of videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg views on the last 5 videos",
              "displayName": "Avg views on the last 5 videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Engagement rate(likes+comments/views)",
              "displayName": "Engagement rate(likes+comments/views)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Last upload date",
              "displayName": "Last upload date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total_Views",
              "displayName": "Total_Views",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1040,
        144
      ],
      "id": "db9346e3-a7cf-4917-b5dc-50bee9b26af0",
      "name": "dashboard",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bTfSnccnOZnGebVA",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Total_Views": "=",
            "Subscriber_Count": "=",
            "No. of videos": "=",
            "Channel_Name": "=",
            "Link of the channel": "=",
            "Avg views on the last 5 videos": "={{ $json.averageViews }}",
            "Engagement rate(likes+comments/views)": "={{ $json.engagementRate }}",
            "Last upload date": "="
          },
          "matchingColumns": [
            "Channel_Name"
          ],
          "schema": [
            {
              "id": "Channel_Name",
              "displayName": "Channel_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Link of the channel",
              "displayName": "Link of the channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subscriber_Count",
              "displayName": "Subscriber_Count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "No. of videos",
              "displayName": "No. of videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg views on the last 5 videos",
              "displayName": "Avg views on the last 5 videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Engagement rate(likes+comments/views)",
              "displayName": "Engagement rate(likes+comments/views)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Last upload date",
              "displayName": "Last upload date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total_Views",
              "displayName": "Total_Views",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1696,
        -160
      ],
      "id": "fbca818e-7690-41f5-976a-3096042d0111",
      "name": "dashboard1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bTfSnccnOZnGebVA",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1920,
        -64
      ],
      "id": "a0c942a1-7952-4c64-95eb-7d10832d48f7",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "## captures the keyword to search on youtube\n\n",
        "height": 288,
        "width": 272
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1296,
        -160
      ],
      "typeVersion": 1,
      "id": "3aa81809-e53f-4495-9f69-00ae8d47f282",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/youtube/v3/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "part",
              "value": "snippet"
            },
            {
              "name": "q",
              "value": "={{ $json.Keyword }}"
            },
            {
              "name": "type",
              "value": "channel"
            },
            {
              "name": "maxResults",
              "value": "3"
            },
            {
              "name": "key",
              "value": "AIzaSyCj1HttdqyqPq1bgAivbEsh4DJWmQT9oZI"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -720,
        -64
      ],
      "id": "5a07cf21-bab4-4080-8454-83df8d9d901f",
      "name": "search channels"
    },
    {
      "parameters": {
        "jsCode": "const results = items[0].json.items.map(i => {\n  return {\n    channelId: i.id.channelId,\n    channelTitle: i.snippet.channelTitle,\n    channelLink: `https://www.youtube.com/channel/${i.id.channelId}`\n  };\n});\n\nreturn results.map(r => ({ json: r }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -496,
        -64
      ],
      "id": "14c7e853-da90-40de-8283-a5ec7b7d663a",
      "name": "fetch channelTitle and Links"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -96,
        -64
      ],
      "id": "303148df-1bc4-468b-9c2d-cb9443dc9408",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "content": "## searches multiple channels on youtube and fetches their IDs, channelName and channelLinks",
        "height": 480,
        "width": 752,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -976,
        -256
      ],
      "typeVersion": 1,
      "id": "b1cd591b-3c39-44da-a05f-3b86fdd3c036",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1232,
        -64
      ],
      "id": "2710a0b5-5713-4d65-9e86-92a280a2cc76",
      "name": "When chat message received",
      "webhookId": "de0af7f0-1093-4b94-bee1-4789621eef76"
    },
    {
      "parameters": {
        "content": "## Get video IDs to capture their metrics iteratively",
        "height": 368,
        "width": 672,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        736,
        -288
      ],
      "typeVersion": 1,
      "id": "d193bb7b-7f0d-42df-9604-d327fc2b2a12",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "let totalViews = 0;\nlet totalLikes = 0;\nlet totalComments = 0;\n\nfor (const item of items) {\n  const video = item.json.items?.[0];  // Safely access first item\n  const stats = video?.statistics;\n\n  if (!stats) continue; // Skip if missing\n\n  totalViews += parseInt(stats.viewCount || '0');\n  totalLikes += parseInt(stats.likeCount || '0');\n  totalComments += parseInt(stats.commentCount || '0');\n}\n\nconst videoCount = items.length;\nconst averageViews = videoCount > 0 ? totalViews / videoCount : 0;\n\nconst engagementRate = totalViews > 0\n  ? ((totalLikes + totalComments) / totalViews) * 100\n  : 0;\n\nreturn [{\n  json: {\n    averageViews: Math.round(averageViews),\n    totalLikes,\n    totalComments,\n    videoCount,\n    engagementRate: Number(engagementRate.toFixed(2))  // As percentage\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1472,
        -160
      ],
      "id": "cd1301c3-0974-4feb-9c51-9b1797147ebd",
      "name": "Avg_view_count and engagement_rate"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI",
          "mode": "list",
          "cachedResultName": "n8n",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 569786521,
          "mode": "list",
          "cachedResultName": "Sheet3",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1oB0JN6_bNCM45uEy6ZEvI7P4mDWnLL24mTu792dhbdI/edit#gid=569786521"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Total_Views": "={{ $json.Total_Views }}",
            "Avg views on the last 5 videos": "={{ $json['Avg views on the last 5 videos'] }}",
            "Engagement rate(likes+comments/views)": "={{ $json['Engagement rate(likes+comments/views)'] }}",
            "No. of videos": "={{ $json['No. of videos'] }}",
            "Subscriber_Count": "={{ $json.Subscriber_Count }}",
            "Link of the channel": "={{ $json['Link of the channel'] }}",
            "Channel_Name": "={{ $json.Channel_Name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Channel_Name",
              "displayName": "Channel_Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link of the channel",
              "displayName": "Link of the channel",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Subscriber_Count",
              "displayName": "Subscriber_Count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "No. of videos",
              "displayName": "No. of videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Avg views on the last 5 videos",
              "displayName": "Avg views on the last 5 videos",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Engagement rate(likes+comments/views)",
              "displayName": "Engagement rate(likes+comments/views)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Total_Views",
              "displayName": "Total_Views",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2176,
        -288
      ],
      "id": "74c12db0-bd85-47df-92b0-f9fb5f84a975",
      "name": "Final_Result",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "bTfSnccnOZnGebVA",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Data is outputted in Google sheets",
        "height": 304,
        "width": 352,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2048,
        -384
      ],
      "typeVersion": 1,
      "id": "60297797-54a1-47e6-a616-24e7cdcc69d3",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {},
  "connections": {
    "channel stats1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          },
          {
            "node": "dashboard",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ID1": {
      "main": [
        [
          {
            "node": "search channels",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Last 5 Videos": {
      "main": [
        [
          {
            "node": "get videoIDs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get videoIDs": {
      "main": [
        [
          {
            "node": "GET each videoID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET each videoID": {
      "main": [
        [
          {
            "node": "Each video metric",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Each video metric": {
      "main": [
        [
          {
            "node": "Avg_view_count and engagement_rate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get Last 5 Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dashboard": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "dashboard1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Final_Result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "search channels": {
      "main": [
        [
          {
            "node": "fetch channelTitle and Links",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "fetch channelTitle and Links": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "channel stats1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "ID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Avg_view_count and engagement_rate": {
      "main": [
        [
          {
            "node": "dashboard1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ab95c181-f890-4133-bcb2-17e615920043",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a955aa5871653049f3c13ce60e89e9393d127a35c671313baf490881f74758b4"
  },
  "id": "BUUlx8lm9JIc3dds",
  "tags": []
}